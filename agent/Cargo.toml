[package]
name = "agent"
version = "0.6.14"
authors = ["Kate Goldenring <kate.goldenring@microsoft.com>", "<bfjelds@microsoft.com>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
akri-debug-echo = { path = "../discovery-handlers/debug-echo" }
akri-discovery-utils = { path = "../discovery-utils" }
akri-onvif = { path = "../discovery-handlers/onvif", optional = true }
akri-opcua = { path = "../discovery-handlers/opcua", optional = true }
akri-udev = { path = "../discovery-handlers/udev", optional = true }
akri-shared = { path = "../shared" }
anyhow = "1.0.43"
async-stream = "0.3.2"
async-trait = "0.1.51"
blake2 = "0.9.2"
chrono = "0.4.19"
cfg-if = "1.0.0"
env_logger = "0.9.0"
futures = { version = "0.3.17", package = "futures" }
futures-core = "0.3.17"
futures-util = "0.3.17"
hyper = "0.14.12"
h2 = "0.3.3"
kube = { version = "0.59.0", features = ["derive"] }
kube-runtime = "0.59.0"
k8s-openapi = { version = "0.13.0", default-features = false, features = ["schemars", "v1_16"] }
lazy_static = "1.4.0"
log = "0.4.14"
mockall_double = "0.2.0"
prometheus = { version = "0.12.0", features = ["process"] }
prost = "0.8.0"
prost-types = "0.8.0"
rand = "0.8.4"
serde = "1.0.130"
serde_json = "1.0.67"
serde_yaml = "0.8.20"
serde_derive = "1.0.130"
tokio = { version = "1.11.0", features = ["rt-multi-thread", "time", "fs", "macros", "net"] }
tokio-stream = { version = "0.1.7", features = ["net"] }
tonic = "0.5.2"
tower = "0.4.8"
url = "2.2.2"
uuid = { version = "0.8.2", features = ["v4"] }

[build-dependencies]
tonic-build = "0.5.2"

[dev-dependencies]
# for testing using a simple discovery handler
akri-discovery-utils = { path = "../discovery-utils", features = ["mock-discovery-handler"] }
akri-onvif = { path = "../discovery-handlers/onvif" }
akri-opcua = { path = "../discovery-handlers/opcua" }
akri-udev = { path = "../discovery-handlers/udev"}
mockall = "0.10.2"
mock_instant = { version = "0.2.1", features = ["sync"] }
tempfile = "3.2.0"

[features]
# To embed discovery handlers, add the desired discovery handler features to default and "agent-full".
# Or set the features when building the agent with  
# `cargo build --manifest-path agent/Cargo.toml --features "agent-full onvif-feat opcua-feat udev-feat"`
default = []
onvif-feat = [ "akri-onvif"]
opcua-feat = ["akri-opcua"]
udev-feat = ["akri-udev"]
agent-full = []
